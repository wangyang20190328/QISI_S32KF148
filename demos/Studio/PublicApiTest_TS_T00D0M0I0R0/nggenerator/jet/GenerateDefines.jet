<%@ jet
    package="test.tresos.plugin.jet.generated"
    class="GenerateDefines"
    imports="java.io.IOException
             dreisoft.tresos.datamodel2.data.node.INode
             dreisoft.tresos.datamodel2.api.model.DCtxt
             dreisoft.tresos.datamodel2.api.model.Var
             dreisoft.tresos.generator.api.generator.CodeGeneratorContext
             dreisoft.tresos.generator.ng.api.ant.JavaGenContext" %>
<%
    /* The jet directive should be placed in the first line of a jet file.
     * It specifies the resulting class name and the imports to be used.
     *
     * The name of the jet template file (this file) can differ from the
     * resulting java file.
     *
     * The scriptlet tags can contain arbitrary Java code. Any other text
     * outside of scriptlets will be written as is.
     */
%>

<%
    /* The JavaGenContext can be accessed via the public static method
     * get(Object, StringBuffer) whereas "argument" and "stringBuffer"
     * are variables generated by the JET compiler and always accessible.
     */
    JavaGenContext context = null;
    try {
        context = JavaGenContext.get( argument, stringBuffer );
    } catch( IOException e ) {
        throw new RuntimeException( "Unable to get JavaGenContext", e );
    }

    /* With the JavaGenContext you can access the DCtxt to query the
     * module configuration.
     */
    DCtxt ctxt = context.gen.getDCtxtVariable();

    // read InputFrequency
    double freq = ctxt.var.getFloat( "ExamplesResourceFile/InputFrequency" );
%>

/**
 * This is a jet generated demo output.
 * Used generation mode was: <%=context.gen.getMode()%>
 *
 * (C) Copyright 2008 EB Automotive
 */

#define INPUT_FREQUENCY <%=Double.toString( freq )%>
<%
    // read prescaler
    String prescaler = ctxt.var.getString( "ExamplesResourceFile/OutputFrequenyPrescaler" );
    float prescalerId;
    try {
        // in the demo the prescalers start with PRE_ (e.g. PRE_1.0)
        prescalerId = Float.parseFloat( prescaler.substring( 4 ) );
    } catch( NumberFormatException nfe ) {
        prescalerId = 0.0f;
    }

    boolean hasFlexray = ctxt.var.getBool( "ExamplesResourceFile/FeatureFlexRay" );
%>
#define PRESCALER       <%=Float.toString( prescalerId )%>
#define ENABLE_FLEXRAY  <%=hasFlexray? "1" : "0"%>
