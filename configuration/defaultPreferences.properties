###############################################
#
# Preferences used when opening a new workspace
#
###############################################


###############################################
# General Preferences
###############################################

# setting to show info labels in dialogs.
# valid values: true, false
showInfoLabels: true

# setting where state information for configuration editors is saved.
# valid values: state_save_in_project, state_save_in_workspace, state_save_in_not
stateSaveLocation: state_save_in_workspace

# setting for to switch to a part's (i.e. some editor) preferred perspective
# valid values: ask_user, always, never
partSwitchesPerspective=ask_user

# setting to save on exit.
# valid values: save, nosave, ask
actionOnExit: ask

# setting what to do when editor is closed and has unsaved changes.
# valid values: true, false
actionUnsaved: true

# setting to show information dialog when the list of referenceable nodes in the Search view has been updated
# valid values: true, false
showDialogReferenceableNodes: true

# setting to show a confirmation dialog when trying to close a locking part (e.g.assistance dialog)
# valid values: true, false
showAutomaticCloseWizardDialog: true

###############################################
# Autosar Preferences
###############################################

# setting to restrict ShortNames to a maximum of 32 characters.
# valid values: true, false
restrictShortNameLength: false

###############################################
# Assistance Dialog Preferences
###############################################

# show an information dialog for changes in result view
# valid values: true, false
showResultViewDialog=true

#
# Assistance Dialog Preferences - Workflows
#

# show an information dialog when a new workflow started automatically 
# valid values: true, false
showChangedWorkflowDialog=true

# show an information dialog when trying to execute an unavailable step in the workflow
# valid values: true, false
showWorkflowNotAvailableDialog=true

# show an information dialog when the end of the workflow has been reached without executing all contained steps
# valid values: true, false
showWorkflowEndReachedDialog=true

# show an information dialog when the workflow has been completely finished
# valid values: true, false
showWorkflowFinishedDialog=true

# automatically advance to the next step when a step in the workflow is executed which only has a textual description
# valid values: ask_user, always, never
workflowAutoadvanceNoCommand=ask_user

###############################################
# Code generator preferences
###############################################

# setting if generated files are stored with unix line endings or not.
# valid values: true, false
unixLfGeneratorFiles: false


# default setting of the "Generation Path" text entry in the New Project wizard and the project preferences
# valid values: valid file system paths 
generationPath: output

# setting to show an information dialog when code generation finished successfully
# valid values: true, false
showGenerationInfoDialog: true

# setting to show an information dialog when code generation finished with errors
# valid values: true, false
showGenerationErrorDialog: true

# setting to show an information dialog when code generation was canceled
# valid values: true, false
showGenerationCancelDialog: true

###############################################
# Configuration Preferences
###############################################

# setting to allow mixed projects.
# valid values: true, false
allowMixedProjects: true

# setting to show a warning that config time has been changed so that previous generator runs become invalid
# valid values: true, false
showConfigTimeChangedWarning: true

# setting to show a warning dialog when trying to add module configurations that can not be added.
# valid values: true, false
showUnaddibleModulesWarning: true

# setting to show a warning dialog when about to overwrite an existing module configuration file
# valid values: true, false
showOverwriteExistingConfigFileWarning: true

# setting whether to re-use module configuration files, that are due to be deleted
# valid values: ask_user, always, never
useModuleConfigNotYetDeletedFile: ask_user

# setting if configuration files are stored with unix line endings or not.
# valid values: true, false
unixLfConfigFiles: false

# setting to switch configuration verify on or off.
# valid values: true, false
enableVerify: true

# setting to set if warnings for readonly configuration parameters should be created.
# valid values: true, false
suppressROWarnings: true

###############################################
# Configuration Preferences - Labels
###############################################

# setting to show module label instead of module-id in the project explorer.
# valid values: true, false
showModuleLabels: true

# setting to set a pattern for te module label that is shown in the project explorer.
# valid values: pattern expression, see Configuration Preferences dialog.
moduleLabelsPattern: %L (V%V, AS%R)

###############################################
# Configuration Preferences - Load/Reload
###############################################

# setting what to do when loading of a module configuration fails.
# valid values: ask_user, remove_module, cancel_load
loadError: ask_user

# setting to decide what to do if user tries to reload project and project is dirty.
# valid values: ask_user, cancel, reload
forceReload: ask_user

# setting to control if backup (.bak) files are created for project preferences
# and ECU configuration files. Backup files are currently only created when
# reloading the configuration
# valid values: true, false
backupFiles: true

###############################################
# Developer features
###############################################

# show stack traces in error details dialog
# valid values: true, false
enableShowStackTraces: false

# show the template-path (as usable in code templates) of the element in properties view
# valid values: true, false
enableShowTemplatePath: false

# show developer features for workflows ("Reload workflow", show workflow id)
# valid values: true, false
enableShowWorkflowFeatures: false

# show the XPath and code template consoles in outline view context menu
# valid values: true, false
enableDeveloperConsoles: false

# Profiler

# setting to enable writing profiling information for the template-based code generator.
# valid values: true, false
profileGenerator: false

# setting to enable the profiler for the verifier
# valid values: true, false
enableVerifierProfiler: false
# setting to specify the threshold in milliseconds(ms) for writing profiling information 
# (only applicable if enableVerifierProfiler=true)
verifierProfilerThreshold: 2000

###############################################
# ErrorLog Preferences
###############################################

# setting to set if Error Log view is cleared on startup.
# valid values: true, false
errorLogClearOnStartup: true

# setting to set if Error Log view is cleared before code generation.
# valid values: true, false
errorLogClearOnGenerate: true

# setting of the maximum number of entries shown in the Error Log view.
# valid values: 1...1000
errorLogMaxVisibleEntries: 100

# setting to set the maximum size of the Error Log view log file in mega-bytes.
# valid values: 1...1000
errorLogMaxLogfileSize: 50

# setting to set if a dialog shall ask to load / open the Project referred by a link 
# (e.g. from an ErrorLog entry).
# valid values: true, false
showDialogForOpenAndLoadProject: true

#
# Parameter comment Preferences
#

# Show a confirmation dialog for auto applying changes to parameter
# comments when language is changed or a new configuration parameter
# is selected
# valid values: true, false
showDialogForAutoApplyComments=true

# Show a confirmation dialog when user tries to remove parameter
# comments from a configuration parameter.
# valid values: true, false
showDialogForRemoveAllComments=true

# Show an information dialog if parameter comments cannot be saved 
# due to project close or shutdown of Studio application
# valid values: true, false
showDialogForCommentSavingProblem=true



# preferences not available via preferences dialog in GUI:

#
# New Configuration Project Wizard
#

# default setting of the checkbox "Automatically add the minimum number of child elements in lists" 
# in the New Project wizard and the project preferences
# valid values: true, false
minimumListChildCreation: false

#
# Problems View
#

# setting to set the maximum number of entries in the Problems View.
# valid values: a positive integer
problemsViewMaxEntries: 100

# selection of enabled filter for the problems view
# valid values: comma spearated list of the values "Error", "Warning", "Info"
problemsViewFilter:

#
# Project Explorer
#

# setting to enable the layer filter in the Project Explorer view.
# valid values: true, false
filterLayer: true

# setting to enable the category filter in the Project Explorer view.
# valid values: true, false
filterCategory: true

# setting to enable the type filter in the Project Explorer view.
# valid values: true, false
filterType: true

#
# Node Outline view
#
# setting to decide whether to show the labels of a node instead of the names.
# valid values: true, false
showNodeLabels: true

#
# Error Log view
#

# setting to enable showning of info messages in the Error Log view.
# valid values: true, false
errorLogShowInfo: false

# setting to enable showning of warning messages in the Error Log view.
# valid values: true, false
errorLogShowWarnings: true

# setting to enable showning of error messages in the Error Log view.
# valid values: true, false
errorLogShowErrors: true


# PARALLEL GENERATION
# if set to false, multiple EPCFileGenerators will NOT be executed parallel
# generateEPCsParallel: false

# if set to false, multiple template-based codegenerators will NOT be executed parallel
# generateTemplatesParallel: false

# if set to false, multiple external code-generators will NOT be executed parallel
# if set to true, external generators will be executed in parallel to other generators - even to other external generators (which is not the case per default)
# generateExternalParallel: false

# if set to false, multiple NGGenerators will NOT be called parallel at all
# if set to true, NGGenerators will be called in parallel to other generators but not to another NGGenerator (currently not implemented)
# generateNGParallel: false

# defines whether loading of a project shall use multiple cpu's (improves performance)
loadParallel: true

# defines whether writing of EPC files shall be cached (so that a configuration which shall be written to multiple files is only calculated once) or not
cacheEPCWriter: true

# when using the arxml file import in GUI mode, this parameter defines whether the files shall be loaded in parallel (using more memory) or not
loadARXMLFilesParallel: true

# verification of ecu configuration is done in parallel on multiple cpu's. This increases the verification performance, but may result in a heavy cpu load
verifyParallel = true

# If set to "true", no additional checks within multiple 
# configuration containers will be performed at post build time (default: false)
postbuildLegacyBehavior = false

# due to the limited GUI handles provided by Windows, one editor tab page is not able to display a huge number of configuration elements at once
# after rendering the here configured number of elements, the next container will be shown on a new tab page
maxElementsPerTab: 100
